// Organization.idl

/*
 * Copyright (c) 2025 adecc Systemhaus GmbH
 *
 * Dieses Programm ist freie Software: Sie können es unter den Bedingungen der
 * GNU General Public License, Version 3, wie von der Free Software Foundation
 * veröffentlicht, weitergeben und/oder modifizieren.
 *
 * Dieses Programm wird in der Hoffnung bereitgestellt, dass es nützlich ist,
 * aber OHNE JEDE GEWÄHRLEISTUNG – sogar ohne die implizite Gewährleistung der
 * MARKTGÄNGIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
 *
 * Sie sollten eine Kopie der GNU General Public License zusammen mit diesem Programm erhalten haben.
 * Falls nicht, siehe <https://www.gnu.org/licenses/>.
 *
 * Teil des Projekts: adecc Scholar – Freies Lernmaterial für modernes C++
 */

module Organization {

   // --------------------
   //    Additional Types
   // --------------------
   enum EGender {
      MALE,
      FEMALE,
      OTHER
      };

   struct TimePoint {
      long long milliseconds_since_epoch;  // Unix timestamp as milliseconds
      };
	   
   struct YearMonthDay {
      long year;
      short month;
      short day;
      };

    // --------------------------
    //  user defined Exception 
    // --------------------------
    exception EmployeeNotFound {
        long requestedId;      // ID, die nicht gefunden wurde
		TimePoint requestedAt; // Timepoint as the error occured 
       };


    // ---------------------------------------
    //  struct with values for direct read
    // ---------------------------------------
    struct EmployeeData {
        long   personId;
        string firstName;
        string name;
        EGender gender;

        double salary;
        YearMonthDay startDate;
        boolean isActive;
	   }; 

    // erst einmal ohne Vererbung
    interface Employee {
	    // Read-only attributes for simplicity in this example
        readonly attribute long   personId;
        readonly attribute string firstName;
        readonly attribute string name;
        readonly attribute EGender gender;

        string getFullName();
		
        readonly attribute double salary;
        readonly attribute YearMonthDay startDate;
        readonly attribute boolean isActive;
		
		void destroy();
    };

    // ---------------------------------
    //    Sequence Type for Employees
    // ---------------------------------
    typedef sequence<Employee> EmployeeSeq;

    // -------------------------------------------
    // Main Service Interface for the Company
    // -------------------------------------------
    interface Company {
	    readonly attribute string nameCompany;
	    TimePoint                 getTimeStamp();
        EmployeeSeq               getEmployees();
		EmployeeSeq               getActiveEmployees();
        Employee                  getEmployee(in long personId) raises (EmployeeNotFound); // Function may raise this Exception
		
		double                    getSumSalary();
		
		// method for direct transfer
		EmployeeData              getEmployeeData(in long personId) raises (EmployeeNotFound); // Function may raise this Exception
    };
};
