// Organization.idl

/*
  Copyright (c) 2025 adecc Systemhaus GmbH
 
  This program is free software: you can redistribute it and/or modify it
  under the terms of the GNU General Public License, version 3,
  as published by the Free Software Foundation.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program. If not, see <https://www.gnu.org/licenses/>.
 
  Part of the adecc Scholar project â€“ Free educational materials for modern C++.
 */

module Organization {

   // --------------------
   //    Additional Types
   // --------------------
   enum EGender {
      MALE,
      FEMALE,
      OTHER
      };

   struct TimePoint {
      long long milliseconds_since_epoch;  // Unix timestamp as milliseconds
      };
	   
   struct YearMonthDay {
      long year;
      short month;
      short day;
      };

    // --------------------------
    //  user defined Exception 
    // --------------------------
    exception EmployeeNotFound {
        long requestedId;      // ID, die nicht gefunden wurde
		TimePoint requestedAt; // Timepoint as the error occured 
       };


    // ---------------------------------------
    //  struct with values for direct read
    // ---------------------------------------
    struct EmployeeData {
        long   personId;
        string firstName;
        string name;
        EGender gender;

        double salary;
        YearMonthDay startDate;
        boolean isActive;
	   }; 

    // erst einmal ohne Vererbung
    interface Employee {
	    // Read-only attributes for simplicity in this example
        readonly attribute long   personId;
        readonly attribute string firstName;
        readonly attribute string name;
        readonly attribute EGender gender;

        string getFullName();
		
        readonly attribute double salary;
        readonly attribute YearMonthDay startDate;
        readonly attribute boolean isActive;
		
		void destroy();
    };

    // ---------------------------------
    //    Sequence Type for Employees
    // ---------------------------------
    typedef sequence<Employee> EmployeeSeq;

    // -------------------------------------------
    // Main Service Interface for the Company
    // -------------------------------------------
    interface Company {
	    readonly attribute string nameCompany;
	    TimePoint                 getTimeStamp();
        EmployeeSeq               getEmployees();
		EmployeeSeq               getActiveEmployees();
        Employee                  getEmployee(in long personId) raises (EmployeeNotFound); // Function may raise this Exception
		
		double                    getSumSalary();
		
		// method for direct transfer
		EmployeeData              getEmployeeData(in long personId) raises (EmployeeNotFound); // Function may raise this Exception
    };
};
